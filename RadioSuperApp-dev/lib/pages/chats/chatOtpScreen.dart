import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:go_router/go_router.dart';
import 'package:radio_super_app/router/wrappers/ChatScreenArgs.dart';
import '../../components/button.dart';
import '../../models/radio/entities/stationEntity.dart';
import '../../router/appRoutes.dart';
import '../../services/chatLoginService.dart';

class ChatOTPScreen extends StatefulWidget {
  final ChatScreenArgs chatScreenArgs;

  const ChatOTPScreen({super.key, required this.chatScreenArgs});

  @override
  State<ChatOTPScreen> createState() => _ChatOTPScreenState();
}

class _ChatOTPScreenState extends State<ChatOTPScreen> {
  final List<TextEditingController> _otpControllers =
  List.generate(6, (_) => TextEditingController());
  bool _isSubmitting = false;

  final ChatLoginService _chatLoginService = ChatLoginService();

  Future<void> _submitData() async {
    final twoFactorKey = _otpControllers.map((controller) => controller.text).join();

    if (twoFactorKey.isEmpty || twoFactorKey.length != 6) {
      _showErrorDialog("Enter a valid 6-digit OTP.");
      return;
    }

    setState(() {
      _isSubmitting = true;
    });

    try {
      await _chatLoginService.submitTwoFactorKey(twoFactorKey: twoFactorKey);

      context.push(AppRoutes.chatScreen);
    } catch (e) {
      _showErrorDialog(e.toString());
    } finally {
      setState(() {
        _isSubmitting = false;
      });
    }
  }

  void _showErrorDialog(String message) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text("Error"),
        content: Text(message),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text("OK"),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: const Color(0xFF4360AA),
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.white),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
      body: Stack(
        children: [
          // Background gradient
          Container(
            decoration: const BoxDecoration(
              gradient: LinearGradient(
                colors: [
                  Color(0xFF4360AA),
                  Color(0xFF91B7F6),
                  Color(0xFFD55774),
                ],
                stops: [0.10, 0.60, 1.0],
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
              ),
            ),
          ),
          // Content
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const SizedBox(height: 20),
                Text(
                  'Welcome ${widget.chatScreenArgs.stationEntity.name}\nLog In to chat with host',
                  textAlign: TextAlign.left,
                  style: const TextStyle(
                    color: Colors.white,
                    fontSize: 26,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 20),
                Container(
                  padding: const EdgeInsets.all(20),
                  decoration: BoxDecoration(
                    color: Colors.white.withOpacity(0.2),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Text(
                        'Two Factor Authentication',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      const Text(
                        'Enter the code generated by your authentication',
                        textAlign: TextAlign.left,
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 16,
                        ),
                      ),
                      const SizedBox(height: 16),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: List.generate(6, (index) {
                          return SizedBox(
                            height: 68,
                            width: 48,
                            child: TextFormField(
                              controller: _otpControllers[index],
                              onChanged: (value) {
                                if (value.length == 1 && index < 5) {
                                  FocusScope.of(context).nextFocus();
                                }
                              },
                              decoration: const InputDecoration(hintText: " "),
                              style: const TextStyle(
                                fontSize: 20,
                                fontWeight: FontWeight.bold,
                                color: Colors.black,
                              ),
                              keyboardType: TextInputType.number,
                              textAlign: TextAlign.center,
                              inputFormatters: [
                                LengthLimitingTextInputFormatter(1),
                                FilteringTextInputFormatter.digitsOnly,
                              ],
                            ),
                          );
                        }),
                      ),
                    ],
                  ),
                ),
                const Spacer(),
              ],
            ),
          ),
          Positioned(
            bottom: 16,
            left: 16,
            right: 16,
            child: Button(
              // onPressed: _isSubmitting ? null : _submitData,
              onPressed: () {
                context.push(AppRoutes.chatScreen, extra: widget.chatScreenArgs);
              },
              buttonText: _isSubmitting ? 'Submitting...' : 'Verify',
            ),
          ),
        ],
      ),
    );
  }
}
